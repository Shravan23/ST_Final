name: Flask Application CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    # services:
    #   postgres:
    #     image: postgres:12
    #     env:
    #       POSTGRES_DB: yourdbname
    #       POSTGRES_USER: youruser
    #       POSTGRES_PASSWORD: yourpassword
    #     ports:
    #       - 5432:5432
    #     options: >-
    #       --health-cmd pg_isready
    #       --health-interval 10s
    #       --health-timeout 5s
    #       --health-retries 5

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install Chrome
      run: |
        sudo apt-get update
        sudo apt-get install -y wget xvfb libxi6 libgconf-2-4
        sudo apt-get install -y google-chrome-stable

    - name: Install ChromeDriver
      run: |
        sudo apt-get update
        sudo apt-get install -y unzip
        CHROMEDRIVER_VERSION="124.0.6367.91"  # Specify a known working version
        curl --silent --show-error --location --fail --retry 3 --output /tmp/chromedriver_linux64.zip "https://storage.googleapis.com/chrome-for-testing-public/124.0.6367.91/linux64/chromedriver-linux64.zip"
        cd /tmp
        unzip chromedriver_linux64.zip
        sudo mv chromedriver-linux64 /usr/local/bin/chromedriver
        sudo chmod +x /usr/local/bin/chromedriver
        chromedriver --version


    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install selenium behave

    - name: Start Flask application
      run: |
        export FLASK_APP=run.py
        nohup python -m flask run --host=0.0.0.0 --port=8080 > flask_output.txt 2>&1 &

    - name: Sleep to allow Flask to initialize
      run: sleep 10

    - name: Display Flask Output
      run: cat flask_output.txt

    - name: Wait for Flask to start
      run: |
        count=0
        until curl --output /dev/null --silent --head --fail http://localhost:8080; do
          printf '.'
          sleep 5
          ((count++))
          if [ "$count" -gt 24 ]; then
            echo "Flask did not start in time."
            cat flask_output.txt
            exit 1
          fi
        done

    - name: Run Behave tests
      run: |
        behave --junit --junit-directory=behave-reports

    - name: Upload Behave reports
      uses: actions/upload-artifact@v2
      with:
        name: behave-reports
        path: behave-reports/
